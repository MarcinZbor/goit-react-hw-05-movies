{"version":3,"file":"static/js/247.3977cb77.chunk.js","mappings":"0KAOMA,E,OAAWC,EAAAA,OAAa,CAC1BC,QAHa,6BAIbC,QAAS,CAAC,eAAgB,sBAGjBC,EAAU,SAAAC,GACnB,IACI,OAAOL,EAASM,IAAI,IAADC,OAAKF,GAC5B,CACA,MAAOG,GACHC,QAAQC,IAAIF,EAChB,CACJ,EAEA,IAnBgB,kC,uFCyChB,UAtCa,WACX,IAAAG,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAQ,WAAAZ,OAAca,OAC1BH,GACD,qBAAAV,OAAoBc,EAAAA,EAAO,mBAY5B,OAVAC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,GAAQe,GACLI,MAAK,SAAAC,GACJR,GAAOS,EAAAA,EAAAA,GAAKD,EAASE,KAAKX,MAC5B,IACCY,OAAM,SAAAnB,GACLC,QAAQC,IAAIF,EAAMoB,QACpB,GACJ,GAAG,CAACT,KAGFU,EAAAA,EAAAA,KAAA,MAAAC,SACGf,EAAKgB,KAAI,SAAAC,GACR,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAC1BC,EAAS,kCAAA9B,OAAqC2B,GAEpD,OACEI,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAKU,IAAKF,EAAWG,IAAKL,KAC1BG,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEQ,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,SAAOK,MACVG,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,cAAYM,UAJVH,EAQb,KAGN,C","sources":["Api/Api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"a2e5f58044c38f804a49ba727f68bccf\"\n\n\nconst BASE_URL = \"https://api.themoviedb.org\"\n\nconst instance = axios.create({\n    baseURL: BASE_URL,\n    headers: {'Content-Type': 'application/json'},\n})\n\nexport const getData = url => {\n    try {\n        return instance.get(`/${url}`)\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport default API_KEY","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API_KEY from 'Api/Api';\nimport { getData } from 'Api/Api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  const CAST_URL = `3/movie/${Number(\n    movieId\n  )}/credits?api_key=${API_KEY}&language=en-US`;\n\n  useEffect(() => {\n    getData(CAST_URL)\n      .then(response => {\n        setCast([...response.data.cast]);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [CAST_URL]);\n\n  return (\n    <ul>\n      {cast.map(actor => {\n        const { id, profile_path, name, character } = actor;\n        const imageFilm = `http://image.tmdb.org/t/p/w200/${profile_path}`;\n\n        return (\n          <li key={id}>\n            <img src={imageFilm} alt={name} />\n            <div>\n              <p>Name: {name}</p>\n              <p>Character: {character}</p>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","headers","getData","url","get","concat","error","console","log","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","CAST_URL","Number","API_KEY","useEffect","then","response","_toConsumableArray","data","catch","message","_jsx","children","map","actor","id","profile_path","name","character","imageFilm","_jsxs","src","alt"],"sourceRoot":""}