{"version":3,"file":"static/js/300.c01cfdb7.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/Hooks/useMovieDetails.jsx","webpack://react-homework-template/./src/components/Pages/MovieDetailsPage/MovieDetailsPage.module.css?2404","components/Pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a2e5f58044c38f804a49ba727f68bccf';\n\nconst BASE_URL = 'https://api.themoviedb.org';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: { 'Content-Type': 'application/json' },\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nexport const getData = url => {\n  try {\n    return instance.get(`/${url}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default API_KEY;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API_KEY from 'Api/Api';\nimport { getData } from 'Api/Api';\n\nconst useMovieDetails = () => {\n  const { movieId } = useParams();\n\n  const MOVIE_DETAILS_URL = `3/movie/${Number(\n    movieId\n  )}?api_key=${API_KEY}&language=en-US`;\n\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    getData(MOVIE_DETAILS_URL)\n      .then(response => {\n        setDetails({ ...response.data });\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [MOVIE_DETAILS_URL]);\n\n  return [details, setDetails];\n};\n\nexport default useMovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetailsPage_link__WJDEq\",\"wrapper\":\"MovieDetailsPage_wrapper__bEnVx\",\"image\":\"MovieDetailsPage_image__FqzRl\"};","import { useRef, Suspense } from 'react';\nimport { Link, useLocation, Outlet } from 'react-router-dom';\nimport { BsBoxArrowLeft } from 'react-icons/bs';\nimport useMovieDetails from '../../Hooks/useMovieDetails';\nimport defaultImg from '../../images/default_image.jpg';\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [details] = useMovieDetails([]);\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  const {\n    original_title,\n    overview,\n    vote_average,\n    genres,\n    release_date,\n    poster_path,\n  } = details;\n\n  const imageFilm = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : defaultImg;\n  const yearRelease = new Date(release_date).getFullYear();\n  const genresString = genres ? genres.map(genre => genre.name).join(' ') : '';\n\n  return (\n    <>\n      {backLinkRef && (\n        <Link to={backLinkRef.current} className={css.link}>\n          <BsBoxArrowLeft />\n          Go back\n        </Link>\n      )}\n      <div className={css.wrapper}>\n        <img src={imageFilm} alt={imageFilm} className={css.image} />\n        <div className={css.description}>\n          <h3>\n            {original_title} ({yearRelease})\n          </h3>\n          <p>Users score {vote_average}</p>\n          <h4>Overview</h4>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{genresString}</p>\n        </div>\n      </div>\n      <div>\n        <h4>Additional information</h4>\n        <ul>\n          <li >\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li >\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;"],"names":["API_KEY","instance","axios","baseURL","headers","params","api_key","language","getData","url","get","concat","error","console","log","movieId","useParams","MOVIE_DETAILS_URL","Number","_useState","useState","_useState2","_slicedToArray","details","setDetails","useEffect","then","response","_objectSpread","data","catch","message","_location$state$from","_location$state","_useMovieDetails","useMovieDetails","location","useLocation","backLinkRef","useRef","state","from","original_title","overview","vote_average","genres","release_date","poster_path","imageFilm","yearRelease","Date","getFullYear","genresString","map","genre","name","join","_jsxs","_Fragment","children","Link","to","current","className","css","_jsx","BsBoxArrowLeft","src","alt","Suspense","Outlet"],"sourceRoot":""}