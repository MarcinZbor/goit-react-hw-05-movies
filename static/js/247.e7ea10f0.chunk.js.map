{"version":3,"file":"static/js/247.e7ea10f0.chunk.js","mappings":"0KAEMA,EAAU,mCAIVC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHe,6BAIfC,QAAS,CAAE,eAAgB,oBAC3BC,OAAQ,CACNC,QAASN,EACTO,SAAU,WAIDC,EAAU,SAAAC,GACrB,IACE,OAAOR,EAASS,IAAI,IAADC,OAAKF,GAC1B,CAAE,MAAOG,GACPC,QAAQC,IAAIF,EACd,CACF,EAEA,K,uFCoBA,UAtCa,WACX,IAAAG,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAQ,WAAAZ,OAAca,OAC1BH,GACD,YAYD,OAVAI,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,GAAQe,GACLG,MAAK,SAAAC,GACJP,GAAOQ,EAAAA,EAAAA,GAAKD,EAASE,KAAKV,MAC5B,IACCW,OAAM,SAAAlB,GACLC,QAAQC,IAAIF,EAAMmB,QACpB,GACJ,GAAG,CAACR,KAGFS,EAAAA,EAAAA,KAAA,MAAAC,SACGd,EAAKe,KAAI,SAAAC,GACR,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAC1BC,EAAS,kCAAA7B,OAAqC0B,GAEpD,OACEI,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAKU,IAAKF,EAAWG,IAAKL,KAC1BG,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEQ,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,SAAOK,MACVG,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,cAAYM,UAJVH,EAQb,KAGN,C","sources":["Api/Api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a2e5f58044c38f804a49ba727f68bccf';\n\nconst BASE_URL = 'https://api.themoviedb.org';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: { 'Content-Type': 'application/json' },\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nexport const getData = url => {\n  try {\n    return instance.get(`/${url}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default API_KEY;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getData } from 'Api/Api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  const CAST_URL = `3/movie/${Number(\n    movieId\n  )}/credits`;\n\n  useEffect(() => {\n    getData(CAST_URL)\n      .then(response => {\n        setCast([...response.data.cast]);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [CAST_URL]);\n\n  return (\n    <ul>\n      {cast.map(actor => {\n        const { id, profile_path, name, character } = actor;\n        const imageFilm = `http://image.tmdb.org/t/p/w200/${profile_path}`;\n\n        return (\n          <li key={id}>\n            <img src={imageFilm} alt={name} />\n            <div>\n              <p>Name: {name}</p>\n              <p>Character: {character}</p>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","instance","axios","baseURL","headers","params","api_key","language","getData","url","get","concat","error","console","log","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","CAST_URL","Number","useEffect","then","response","_toConsumableArray","data","catch","message","_jsx","children","map","actor","id","profile_path","name","character","imageFilm","_jsxs","src","alt"],"sourceRoot":""}