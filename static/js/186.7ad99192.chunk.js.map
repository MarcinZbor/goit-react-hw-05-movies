{"version":3,"file":"static/js/186.7ad99192.chunk.js","mappings":"0KAOMA,E,OAAWC,EAAAA,OAAa,CAC1BC,QAHa,6BAIbC,QAAS,CAAC,eAAgB,sBAGjBC,EAAU,SAAAC,GACnB,IACI,OAAOL,EAASM,IAAI,IAADC,OAAKF,GAC5B,CACA,MAAOG,GACHC,QAAQC,IAAIF,EAChB,CACJ,EAEA,IAnBgB,kC,uFC2ChB,UAxCgB,WACd,IAAAG,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAClBI,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAQ,WAAAZ,OAAca,OAC1BH,GACD,qBAAAV,OAAoBc,EAAAA,EAAO,mBAY5B,OAVAC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,GAAQe,GACLI,MAAK,SAAAC,GACJR,GAAUS,EAAAA,EAAAA,GAAKD,EAASE,KAAKC,SAC/B,IACCC,OAAM,SAAApB,GACLC,QAAQC,IAAIF,EAAMqB,QACpB,GACJ,GAAG,CAACV,KAGFW,EAAAA,EAAAA,KAAA,MAAAC,SACsB,IAAnBhB,EAAQiB,QACPF,EAAAA,EAAAA,KAAA,KAAAC,SAAG,8CAEHhB,EACGkB,QAAO,SAACC,EAAQC,GAAK,OAAKA,EAAQ,EAAE,IACpCC,KAAI,SAAAF,GACH,IAAQG,EAAgCH,EAAhCG,GAAIC,EAA4BJ,EAA5BI,eAAgBC,EAAYL,EAAZK,QACpBC,EAAaF,EAAbE,SACR,OACEC,EAAAA,EAAAA,MAAA,MAAAV,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKS,KACLV,EAAAA,EAAAA,KAAA,KAAAC,SAAIQ,MAFGF,EAKb,KAIV,C","sources":["Api/Api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"a2e5f58044c38f804a49ba727f68bccf\"\n\n\nconst BASE_URL = \"https://api.themoviedb.org\"\n\nconst instance = axios.create({\n    baseURL: BASE_URL,\n    headers: {'Content-Type': 'application/json'},\n})\n\nexport const getData = url => {\n    try {\n        return instance.get(`/${url}`)\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport default API_KEY","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API_KEY from 'Api/Api';\nimport { getData } from 'Api/Api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  const CAST_URL = `3/movie/${Number(\n    movieId\n  )}/reviews?api_key=${API_KEY}&language=en-US`;\n\n  useEffect(() => {\n    getData(CAST_URL)\n      .then(response => {\n        setReviews([...response.data.results]);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [CAST_URL]);\n\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        reviews\n          .filter((review, index) => index < 20)\n          .map(review => {\n            const { id, author_details, content } = review;\n            const { username } = author_details;\n            return (\n              <li key={id}>\n                <h3>{username}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;"],"names":["instance","axios","baseURL","headers","getData","url","get","concat","error","console","log","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","CAST_URL","Number","API_KEY","useEffect","then","response","_toConsumableArray","data","results","catch","message","_jsx","children","length","filter","review","index","map","id","author_details","content","username","_jsxs"],"sourceRoot":""}